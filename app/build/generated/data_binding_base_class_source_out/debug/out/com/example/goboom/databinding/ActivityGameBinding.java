// Generated by view binder compiler. Do not edit!
package com.example.goboom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.goboom.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelPlayButton;

  @NonNull
  public final TextView cardsLeft1;

  @NonNull
  public final TextView cardsLeft2;

  @NonNull
  public final LinearLayout cardsPlayer;

  @NonNull
  public final ImageView centerCard1;

  @NonNull
  public final ImageView centerCard2;

  @NonNull
  public final ImageView centerCard3;

  @NonNull
  public final ImageView centerCard4;

  @NonNull
  public final ImageView centerCard5;

  @NonNull
  public final Button drawCardB1;

  @NonNull
  public final Button drawCardB2;

  @NonNull
  public final ConstraintLayout gameBackground;

  @NonNull
  public final ConstraintLayout gameMenu;

  @NonNull
  public final AppCompatButton gameMenuButton;

  @NonNull
  public final EditText gameSaveName;

  @NonNull
  public final Button loadGameBtn;

  @NonNull
  public final Button playButton;

  @NonNull
  public final TextView playerCardText;

  @NonNull
  public final TextView playerScoresText;

  @NonNull
  public final TextView playerTurnText;

  @NonNull
  public final Button restartButton;

  @NonNull
  public final AppCompatButton reverseGameMenuButton;

  @NonNull
  public final TextView roundCounterText;

  @NonNull
  public final Button saveFileFinder;

  @NonNull
  public final ConstraintLayout saveGameBar;

  @NonNull
  public final Button saveGameBtn;

  private ActivityGameBinding(@NonNull ConstraintLayout rootView, @NonNull Button cancelPlayButton,
      @NonNull TextView cardsLeft1, @NonNull TextView cardsLeft2, @NonNull LinearLayout cardsPlayer,
      @NonNull ImageView centerCard1, @NonNull ImageView centerCard2,
      @NonNull ImageView centerCard3, @NonNull ImageView centerCard4,
      @NonNull ImageView centerCard5, @NonNull Button drawCardB1, @NonNull Button drawCardB2,
      @NonNull ConstraintLayout gameBackground, @NonNull ConstraintLayout gameMenu,
      @NonNull AppCompatButton gameMenuButton, @NonNull EditText gameSaveName,
      @NonNull Button loadGameBtn, @NonNull Button playButton, @NonNull TextView playerCardText,
      @NonNull TextView playerScoresText, @NonNull TextView playerTurnText,
      @NonNull Button restartButton, @NonNull AppCompatButton reverseGameMenuButton,
      @NonNull TextView roundCounterText, @NonNull Button saveFileFinder,
      @NonNull ConstraintLayout saveGameBar, @NonNull Button saveGameBtn) {
    this.rootView = rootView;
    this.cancelPlayButton = cancelPlayButton;
    this.cardsLeft1 = cardsLeft1;
    this.cardsLeft2 = cardsLeft2;
    this.cardsPlayer = cardsPlayer;
    this.centerCard1 = centerCard1;
    this.centerCard2 = centerCard2;
    this.centerCard3 = centerCard3;
    this.centerCard4 = centerCard4;
    this.centerCard5 = centerCard5;
    this.drawCardB1 = drawCardB1;
    this.drawCardB2 = drawCardB2;
    this.gameBackground = gameBackground;
    this.gameMenu = gameMenu;
    this.gameMenuButton = gameMenuButton;
    this.gameSaveName = gameSaveName;
    this.loadGameBtn = loadGameBtn;
    this.playButton = playButton;
    this.playerCardText = playerCardText;
    this.playerScoresText = playerScoresText;
    this.playerTurnText = playerTurnText;
    this.restartButton = restartButton;
    this.reverseGameMenuButton = reverseGameMenuButton;
    this.roundCounterText = roundCounterText;
    this.saveFileFinder = saveFileFinder;
    this.saveGameBar = saveGameBar;
    this.saveGameBtn = saveGameBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelPlayButton;
      Button cancelPlayButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelPlayButton == null) {
        break missingId;
      }

      id = R.id.cardsLeft1;
      TextView cardsLeft1 = ViewBindings.findChildViewById(rootView, id);
      if (cardsLeft1 == null) {
        break missingId;
      }

      id = R.id.cardsLeft2;
      TextView cardsLeft2 = ViewBindings.findChildViewById(rootView, id);
      if (cardsLeft2 == null) {
        break missingId;
      }

      id = R.id.cardsPlayer;
      LinearLayout cardsPlayer = ViewBindings.findChildViewById(rootView, id);
      if (cardsPlayer == null) {
        break missingId;
      }

      id = R.id.centerCard1;
      ImageView centerCard1 = ViewBindings.findChildViewById(rootView, id);
      if (centerCard1 == null) {
        break missingId;
      }

      id = R.id.centerCard2;
      ImageView centerCard2 = ViewBindings.findChildViewById(rootView, id);
      if (centerCard2 == null) {
        break missingId;
      }

      id = R.id.centerCard3;
      ImageView centerCard3 = ViewBindings.findChildViewById(rootView, id);
      if (centerCard3 == null) {
        break missingId;
      }

      id = R.id.centerCard4;
      ImageView centerCard4 = ViewBindings.findChildViewById(rootView, id);
      if (centerCard4 == null) {
        break missingId;
      }

      id = R.id.centerCard5;
      ImageView centerCard5 = ViewBindings.findChildViewById(rootView, id);
      if (centerCard5 == null) {
        break missingId;
      }

      id = R.id.drawCardB1;
      Button drawCardB1 = ViewBindings.findChildViewById(rootView, id);
      if (drawCardB1 == null) {
        break missingId;
      }

      id = R.id.drawCardB2;
      Button drawCardB2 = ViewBindings.findChildViewById(rootView, id);
      if (drawCardB2 == null) {
        break missingId;
      }

      ConstraintLayout gameBackground = (ConstraintLayout) rootView;

      id = R.id.gameMenu;
      ConstraintLayout gameMenu = ViewBindings.findChildViewById(rootView, id);
      if (gameMenu == null) {
        break missingId;
      }

      id = R.id.gameMenuButton;
      AppCompatButton gameMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (gameMenuButton == null) {
        break missingId;
      }

      id = R.id.gameSaveName;
      EditText gameSaveName = ViewBindings.findChildViewById(rootView, id);
      if (gameSaveName == null) {
        break missingId;
      }

      id = R.id.loadGameBtn;
      Button loadGameBtn = ViewBindings.findChildViewById(rootView, id);
      if (loadGameBtn == null) {
        break missingId;
      }

      id = R.id.playButton;
      Button playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.playerCardText;
      TextView playerCardText = ViewBindings.findChildViewById(rootView, id);
      if (playerCardText == null) {
        break missingId;
      }

      id = R.id.playerScoresText;
      TextView playerScoresText = ViewBindings.findChildViewById(rootView, id);
      if (playerScoresText == null) {
        break missingId;
      }

      id = R.id.playerTurnText;
      TextView playerTurnText = ViewBindings.findChildViewById(rootView, id);
      if (playerTurnText == null) {
        break missingId;
      }

      id = R.id.restartButton;
      Button restartButton = ViewBindings.findChildViewById(rootView, id);
      if (restartButton == null) {
        break missingId;
      }

      id = R.id.reverseGameMenuButton;
      AppCompatButton reverseGameMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (reverseGameMenuButton == null) {
        break missingId;
      }

      id = R.id.roundCounterText;
      TextView roundCounterText = ViewBindings.findChildViewById(rootView, id);
      if (roundCounterText == null) {
        break missingId;
      }

      id = R.id.saveFileFinder;
      Button saveFileFinder = ViewBindings.findChildViewById(rootView, id);
      if (saveFileFinder == null) {
        break missingId;
      }

      id = R.id.saveGameBar;
      ConstraintLayout saveGameBar = ViewBindings.findChildViewById(rootView, id);
      if (saveGameBar == null) {
        break missingId;
      }

      id = R.id.saveGameBtn;
      Button saveGameBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveGameBtn == null) {
        break missingId;
      }

      return new ActivityGameBinding((ConstraintLayout) rootView, cancelPlayButton, cardsLeft1,
          cardsLeft2, cardsPlayer, centerCard1, centerCard2, centerCard3, centerCard4, centerCard5,
          drawCardB1, drawCardB2, gameBackground, gameMenu, gameMenuButton, gameSaveName,
          loadGameBtn, playButton, playerCardText, playerScoresText, playerTurnText, restartButton,
          reverseGameMenuButton, roundCounterText, saveFileFinder, saveGameBar, saveGameBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
